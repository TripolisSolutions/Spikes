= OdataServer

This project is a rails engine implementing the odata server gem which already was available.
The goal was to get it running in its current implementation in a rails 3 stack.

To get the datasets:
http://localhost:3000/OData/OData.svc

response:
{"d":{"EntitySets":["ODataServerTests"]}}

To get the collection:
http://localhost:3000/OData/OData.svc/:entityset

You can use entity sets returned by the /OData/OData.svc call:
http://localhost:3000/OData/OData.svc/ODataServerTests

response:
[
{"__metadata":{"uri":"ODataServer::Tests(1)","type":"OData.ODataServerTest"},"id":1,"name":"Name1","created_at":"2013-04-08T12:54:13Z","updated_at":"2013-04-08T12:54:13Z"},
{"__metadata":{"uri":"ODataServer::Tests(2)","type":"OData.ODataServerTest"},"id":2,"name":"Name2","created_at":"2013-04-08T12:54:16Z","updated_at":"2013-04-08T12:54:16Z"},
{"__metadata":{"uri":"ODataServer::Tests(3)","type":"OData.ODataServerTest"},"id":3,"name":"Name3","created_at":"2013-04-08T12:54:19Z","updated_at":"2013-04-08T12:54:19Z"},
{"__metadata":{"uri":"ODataServer::Tests(4)","type":"OData.ODataServerTest"},"id":4,"name":"Name0","created_at":"2013-04-08T14:28:18Z","updated_at":"2013-04-08T14:28:18Z"},
{"__metadata":{"uri":"ODataServer::Tests(5)","type":"OData.ODataServerTest"},"id":5,"name":"Name1","created_at":"2013-04-08T14:28:18Z","updated_at":"2013-04-08T14:28:18Z"},
]


To find a specific entry:
http://localhost:3000/OData/OData.svc/ODataServerTests(3)

response:
{"d":{"__metadata":{"uri":"ODataServer::Tests(3)","type":"OData.ODataServerTest"},"id":3,"name":"Name3","created_at":"2013-04-08T12:54:19Z","updated_at":"2013-04-08T12:54:19Z"}}

Filter on specific properties:
http://localhost:3000/OData/OData.svc/ODataServerTests(3)?$select=name

response:
{"d":{"__metadata":{"uri":"ODataServer::Tests(3)","type":"OData.ODataServerTest"},"name":"Name3"}}

These above are some examples of this spike.

The following parameters are also provided by the odata server gem:
- $top
- $orderby
- $skip
- $inlinecount
- $format (which throws an exception now, but thats a different reason)

Missing is the $filter parameter, which is a big miss as it makes it possible to more or less query on your endpoints.
This will take alot of time to implement.

It also only works for ActiveRecord models. Mongoid models are not exposed but can be if we write code for it.

The big plus is that if you have an existing api project, when adding this gem, your api is also odata compliant.


